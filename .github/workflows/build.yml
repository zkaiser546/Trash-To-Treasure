name: Android APK Builder

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean environment
        run: |
          rm -rf ~/.buildozer ~/.android ~/.gradle venv
          rm -f buildozer.spec

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip python3-pip python3-venv \
            openjdk-17-jdk autoconf libtool pkg-config \
            zlib1g-dev libncurses5-dev cython3

      - name: Setup Python environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install buildozer cython==0.29.33 kivy==2.3.0

      - name: Create buildozer.spec
        run: |
          cat << EOF > buildozer.spec
          [app]
          title = MyApp
          package.name = myapp
          package.domain = org.example
          source.dir = .
          source.include_exts = py,png,jpg,kv,ttf,json
          version = 1.0
          requirements = python3,kivy==2.3.0,openssl,sqlite3,android
          orientation = portrait
          android.api = 34
          android.minapi = 21

          [buildozer]
          log_level = 2
          android.skip_clean = True
          android.accept_sdk_license = True
          android.arch = arm64-v8a
          EOF

      - name: Install Android SDK
        run: |
          mkdir -p ~/.buildozer/android/platform
          cd ~/.buildozer/android/platform
          
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -qq commandlinetools-linux-*.zip
          rm commandlinetools-linux-*.zip
          
          mkdir -p android-sdk/cmdline-tools
          mv cmdline-tools android-sdk/cmdline-tools/latest
          
          ln -sfn cmdline-tools/latest android-sdk/tools
          ln -sfn ../cmdline-tools/latest/bin android-sdk/tools/bin

          export ANDROID_SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
          export PATH="$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin"
          
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34"

      - name: Install NDK
        run: |
          cd ~/.buildozer/android/platform
          wget -q https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
          unzip -qq android-ndk-*.zip
          rm android-ndk-*.zip

      - name: Apply SDL2 patch
        run: |
          source venv/bin/activate
          
          # Force Python-for-Android initialization
          echo "Initializing Python-for-Android..."
          buildozer android update 2>&1 | tee p4a.log
          grep -q "SDL2" p4a.log || (echo "Python-for-Android init failed!"; exit 1)

          # Find exact SDL2 path
          SDL_PATH=$(find ~/.buildozer/android/platform -wholename "*python-for-android*/recipes/sdl2/__init__.py")
          
          if [ -f "$SDL_PATH" ]; then
            echo "Patching file: $SDL_PATH"
            sed -i 's/__USE_MISC/_BSD_SOURCE/g' "$SDL_PATH"
            echo "Patch verification:"
            grep "_BSD_SOURCE" "$SDL_PATH" || exit 1
          else
            echo "SDL2 path not found! Directory structure:"
            find ~/.buildozer/android/platform -name python-for-android
            find ~/.buildozer/android/platform -name sdl2
            exit 1
          fi

      - name: Build APK
        run: |
          source venv/bin/activate
          buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: bin/*.apk
