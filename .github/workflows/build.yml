name: Android APK Builder

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 90

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip python3-pip python3-venv \
            openjdk-17-jdk autoconf libtool pkg-config \
            zlib1g-dev libncurses5-dev cython3

      - name: Create virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install buildozer cython==0.29.33

      - name: Configure Android SDK/NDK
        run: |
          mkdir -p ~/.buildozer/android/platform
          cd ~/.buildozer/android/platform
          
          # Download verified Android components
          wget https://github.com/mzautomation/android-sdk-ndk-prebuilt/releases/download/v1.0/android-tools-34-ndk25b.zip
          unzip android-tools-34-ndk25b.zip
          rm android-tools-34-ndk25b.zip
          
          # Verify critical components
          ls -la android-sdk/build-tools/34.0.0/aidl
          ls -la android-ndk-r25b

      - name: Configure buildozer.spec
        run: |
          source venv/bin/activate
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi
          echo "[buildozer]
          log_level = 2
          android.skip_clean = True
          android.accept_sdk_license = True
          android.sdk_path = $HOME/.buildozer/android/platform/android-sdk
          android.ndk_path = $HOME/.buildozer/android/platform/android-ndk-r25b" >> buildozer.spec

      - name: Build APK
        run: |
          source venv/bin/activate
          buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: bin/*.apk
